{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"U2L4: Tilesets and Tilemaps","provenance":[{"file_id":"1wTOXceYloRfuTRsnNv0XtMsXl-HkZpJZ","timestamp":1595866172695},{"file_id":"1XbrfMAnPMr1N7TbUU2tH8Ia2ORQp0cAL","timestamp":1584918005357},{"file_id":"1ozPIctFfa53BO5Usnbr94_JjXMNbIxra","timestamp":1574738192487},{"file_id":"1gSBU9VGq0-5NUEs78T4n6ZapRqsvLsLY","timestamp":1571732871640}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"GgR1dlmRvaaR","colab_type":"text"},"source":["# Unit #: Lesson # - Tilesets and Tilemaps\n","*In this lesson we will learn how to properly create and import a tile set, then use a tilemap to create a simple game level.*\n","\n","\n","---\n","\n","# Learning Objectives\n","---\n","\n","*   Students will learn about creating tilesets.\n","*   Students will learn how to properly import their tilesets.\n","*   Students will learn how to use Unity's tilemap system to build a game level.\n","\n","# Key Concepts\n","---\n","\n","*   Import settings\n","*   Sprite Editor\n","*   Grid, Tilemaps\n","*   Composite Colliders\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"tOhYaL5pNKxL","colab_type":"text"},"source":["# Introduction\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"rpgHIbROwNC_","colab_type":"text"},"source":["# Concept 1: What is a tileset?\n","\n","---\n","### **Tilesets**\n","Tilesets are images of multiple \"tiles\" that can be used to build levels in games. \n","This is what Super Mario Bro's tileset looks like : \n","![](https://drive.google.com/uc?id=1Fq5OyEi072P7os0xxaZeA1O5kW2Z4Rkh)\n","\n","As you can see, every block that they use for the different levels is added to a single image, allowing the game developers to make levels easier.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"WCLpP47wwfOw","colab_type":"text"},"source":["# Concept 2 : Find and import a tileset\n","\n","---\n","\n","**Download this tileset we will be using for this lesson : LINK GOES HERE**\n"," \n"," Create a new folder called \"Tilesets\" and put the file we just downloaded into it. Also create a folder called \"Tiles\" inside your \"Tilesets\" folder, we will use this later.\n","\n"," When we click on our image in Unity, a bunch of options show up in the inspector, so what is important ? \n","![alt text](https://drive.google.com/uc?export=view&id=1Tj4-TjnV6u-YorRD5HuHtUnGwJqUkxpu)\n","---\n","\n"," Sprite mode : If your image has more that one sprite in it, like our tileset or any other \"sprite sheet\" (mostly used for animations), then we want to set our sprite mode to \"Multiple\"\n","\n","---\n","\n"," Pixels Per Unit : Pixels per unit allows us to tell unity how big each of our tiles in the image are. In this case the tiles are 8x8 pixels, so we set this option to 8.\n","\n","---\n","\n"," Mesh type : This option allows unity to automatically change our collider to fit the shape of the tile, or in this case we want the collider to be full squares so we will change this to \"Full Rect\" (like full rectangle)\n","\n","---\n","\n"," Filter Mode : Filter mode is important if you are using Pixel Art (like our example tileset). If were using pixel art, we want to use the setting \"Point(no filter)\". If we dont change this setting, our image will look blurry.\n","\n","---\n","\n"," Sprite editor : The sprite editor allows us to split up our tiles easily.\n"," Click on Split, and change the type setting to Grid By Cell Size. We know our pixel size is 8x8 so we will change that setting as well. Then click slice. You will see a bunch of squares apear around your tiles. Click apply and close. \n","\n"," ---\n","\n"," Now we have our tileset ready to use!"]},{"cell_type":"markdown","metadata":{"id":"E9fHYSKdxJaX","colab_type":"text"},"source":["# Concept 3: Creating a Tile Palette\n","\n","---\n","### **Grids and Tilemaps**\n","\n","Under your scene hierarchy, create a new tilemap by selecting 2D object->Tilemap\n","\n","You will see that Unity has made us a grid, and if you click on the arrow next to it, we have our tilemap. The tilemap is what actually holds our tiles. Feel free to play with the settings on the grid, you can always reset them by clicking the 3 dots on the component and clicking \"Reset\".\n","\n","Next, from the Window drop down at the top of your computer, select 2D, and Tile Palette. This will open the Tile Palette window which will allow us to add tiles to our tilemap.\n","\n","---\n","\n","![alt text](https://drive.google.com/uc?export=view&id=1AXjTrKHOKY08ZdNVfOvIy8OwNdgerz2X)\n","\n","---\n","\n","Now, on your tile pallet click Create New Palette, and name it something like \"MyPalette\" or, if you have a more specific name, for example if your tileset was for a forest, you could name it \"forestPalette\".\n","\n","Save your palette to the same location you have your tileset file, and tiles folder.\n","\n","The last step before we can use our tileset is to drag it into our new tile palette. When it asks for a folder, select the \"Tiles\" folder we made at the start. Once done, it will load all of the tiles into your palette and we are ready to use it!\n","\n","![alt text](https://drive.google.com/uc?export=view&id=1Baj4athSQ9pJiaZwYVpxdwlLz7WI79pP)"]},{"cell_type":"markdown","metadata":{"id":"uUV-ch60_oBz","colab_type":"text"},"source":["# Concept 4: Using our Tile Palette\n","\n","---\n","\n","Now that we have our palette ready to use, lets select the Paint brush tool, and select a block to use. You will see the grid show up again, and you can now paint a level in unity!\n","\n","![alt text](https://drive.google.com/uc?export=view&id=1DHwHlFVlDu3S5LMJxeDO-rHNw1Tz99po)\n","\n","\n","The other options we have in our tile pallete are (in order following the paint brush) \n","\n","Fill a box : fill in a box shaped area (click and drag)\n","\n","Eyedrop: select a tile from one we already painted\n","\n","Erase : erase tiles\n","\n","Fill : fill in a closed space"]},{"cell_type":"markdown","metadata":{"id":"c_IvPuSl_u8n","colab_type":"text"},"source":["## Exercise #1\n","\n","---\n","\n","**Paint a level**\n","\n","Spend about 5-10 minutes to draw a level you could imagine would exist in Mario"]},{"cell_type":"markdown","metadata":{"id":"YjJslgIgSW8s","colab_type":"text"},"source":["##### **Solution**"]},{"cell_type":"markdown","metadata":{"id":"CxUwyhtAbZ0S","colab_type":"text"},"source":["You might have something that looks like this.\n","![alt text](https://drive.google.com/uc?export=view&id=1Z4J_2LMqA6rUNtruAWqiGtYUISqou0ni)"]},{"cell_type":"markdown","metadata":{"id":"cAWxIp0fO3WM","colab_type":"text"},"source":["## Exercise #2\n","\n","---\n","\n","**Problem: We want our player to collider with the ground**\n","\n","**HINT : Normally we would add a Box or Cirlce Collider2D, but this time try looking adding compontents and searching for \"Tile\", there will be some new options to explore.**\n","\n","Try adding the components you need to make another object collide with your new tilemap. Make sure youre adding to your Tilemap, and not the grid."]},{"cell_type":"markdown","metadata":{"id":"a8U-kJvzSXhv","colab_type":"text"},"source":["##### **Solution**"]},{"cell_type":"markdown","metadata":{"id":"Ib8VEGswb0tp","colab_type":"text"},"source":["Add a Tilemap Collider2D and a Rigidbody2D to your tilemap \n","You should see green squares around all of your tiles you painted.\n","\n","Dont forget to set your rigidbody body to static so our ground doesnt move.\n","\n","There is another component we will add to help with colliders : Composite Collider 2D. On your Tilemap Collider 2D, check the \"Used by Composite\" box.\n","\n","This will make your many smaller colliders turn into one big collider. This is better for collision detection as it only has to look at the one collider instead of many.\n","\n","Your inspector should look like this for your tilemap : \n","\n","![alt text](https://drive.google.com/uc?export=view&id=1zXuP3r_bRH5UbDqCYiO0HjxhI908AL5K)"]},{"cell_type":"markdown","metadata":{"id":"orEZhhQkO4YP","colab_type":"text"},"source":["## Exercise #3\n","\n","---\n","\n","**Problem : We want to draw a background, but dont want it to have the same colliders and physics that our current tilemap has.**\n","\n","\n","**Solution:**\n","Create a new Tilemap from the scene hierarchy, and rename the tilemap to \"Background\"\n","\n","Name your other tilemap we have already worked on to \"Foreground\" \n","\n","Because we dont want to collide with the background, we dont have to add any physics or colliders to it. \n","\n","Notice on your tile palette tool, we have to change our active tilemap whenever we want to change what we are painting on. Make sure you keep track of this or you will paint floors on the background, and they wont have a collider or background on the forground, and you will walk into invisible walls.\n","\n","![alt text](https://drive.google.com/uc?export=view&id=1E3FGGXGQMSVsGml9ZTBwk9qXDp4rBuoA)"]},{"cell_type":"markdown","metadata":{"id":"4zyLYfy7lvAO","colab_type":"text"},"source":["# ACTIVITIES\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"RCelsKoxOlbu","colab_type":"text"},"source":["## Activity #1\n","\n","---\n","Lets copy a player script we have used for a platformer so we can test our level\n","\n","Dont forget to add a tag \"Floor\" to your Foreground Tilemap.\n","\n","Then spend some time building and testing a level.\n"]},{"cell_type":"code","metadata":{"id":"sd9bEU53g-al","colab_type":"code","colab":{}},"source":["using System.Collections;\n","using System.Collections.Generic;\n","using UnityEngine;\n","\n","public class Move : MonoBehaviour\n","{\n","    private Rigidbody2D rb;\n","    [SerializeField] private float speed;\n","    [SerializeField] private float jumpForce;\n","\n","    private bool isFloored;\n","\n","    // Start is called before the first frame update\n","    void Start()\n","    {\n","        rb = GetComponent<Rigidbody2D>();\n","        isFloored = false;\n","    }\n","\n","    void FixedUpdate()\n","    {\n","        Walk();\n","\n","        // Jump if you're pressing Up or Space\n","        if (Input.GetKey(KeyCode.UpArrow) ||\n","            Input.GetKey(KeyCode.Space))\n","        {\n","            if (isFloored)\n","                Jump();\n","        }\n","    }\n","\n","    private void Walk()\n","    {\n","        float horizontal = Input.GetAxisRaw(\"Horizontal\");\n","\n","        Vector2 movement = new Vector2(horizontal * speed * Time.deltaTime, rb.velocity.y);\n","\n","        rb.velocity = movement;\n","    }\n","\n","    private void Jump()\n","    {\n","        rb.velocity = new Vector2(rb.velocity.x, 0);\n","        rb.AddForce(jumpForce * Vector2.up * rb.mass, ForceMode2D.Impulse);\n","    }\n","\n","    void OnCollisionStay2D(Collision2D collision)\n","    {\n","        if (collision.gameObject.tag == \"Floor\")\n","            isFloored = true;\n","    }\n","\n","    void OnCollisionExit2D(Collision2D collision)\n","    {\n","        if (collision.gameObject.tag == \"Floor\")\n","            isFloored = false;\n","    }\n","}"],"execution_count":null,"outputs":[]}]}